{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "<script src='/gmeek/GmeekTOC.js'></script>", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "\u2764\ufe0f \u8f6c\u8f7d\u6587\u7ae0\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u8c22\u8c22\uff01\u2764\ufe0f", "showPostSource": 1, "iconList": {"add": "M8 1C8.4 1 8.7 1.3 8.7 1.7V7.3H14.3C14.7 7.3 15 7.6 15 8C15 8.4 14.7 8.7 14.3 8.7H8.7V14.3C8.7 14.7 8.4 15 8 15C7.6 15 7.3 14.7 7.3 14.3V8.7H1.7C1.3 8.7 1 8.4 1 8C1 7.6 1.3 7.3 1.7 7.3H7.3V1.7C7.3 1.3 7.6 1 8 1Z", "music": "M12.7 0.9L7.3 0.9C6 0.9 4.9 2 4.9 3.3L4.9 10.1C4.5 9.9 4.1 9.8 3.6 9.8C2.1 9.8 0.9 11 0.9 12.4C0.9 13.9 2.1 15.1 3.6 15.1C5 15.1 6.2 13.9 6.2 12.4L6.2 3.3C6.2 2.7 6.7 2.2 7.3 2.2L12.7 2.2C13.3 2.2 13.8 2.7 13.8 3.3L13.8 7.5C13.4 7.3 12.9 7.1 12.4 7.1C11 7.1 9.8 8.3 9.8 9.8C9.8 11.2 11 12.4 12.4 12.4C13.9 12.4 15.1 11.2 15.1 9.8L15.1 3.3C15.1 2 14 0.9 12.7 0.9ZM3.6 13.8C2.8 13.8 2.2 13.2 2.2 12.4C2.2 11.7 2.8 11.1 3.6 11.1C4.3 11.1 4.9 11.7 4.9 12.4C4.9 13.2 4.3 13.8 3.6 13.8ZM12.4 11.1C11.7 11.1 11.1 10.5 11.1 9.8C11.1 9 11.7 8.4 12.4 8.4C13.2 8.4 13.8 9 13.8 9.8C13.8 10.5 13.2 11.1 12.4 11.1ZM12.4 11.1"}, "UTC": 8, "rssSplit": "sentence", "exlink": {"add": "https://github.com/realfaketop/web/issues/new", "music": "https://realfake.top/pc"}, "needComment": 1, "allHead": "<script src='/gmeek/GmeekVercount.js'></script>", "title": "RealFake", "subTitle": "BB Work No Money", "homeUrl": "https://realfake.top", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/RealFakeTop.html", "labels": ["documentation"], "postTitle": "RealFakeTop", "postUrl": "post/RealFakeTop.html", "postSourceUrl": "https://github.com/realfaketop/web/issues/1", "commentNum": 0, "wordCount": 851, "description": "## \u7b80\u4ecb\n\n\u4e13\u6ce8\u4e8e **\u6536\u96c6\u4e0e\u6574\u7406\u201c\u771f\u5b9e / \u865a\u5047\u201d\u4e92\u8054\u7f51\u6570\u636e\u548c\u5f00\u6e90\u6570\u636e\u96c6**\u3002", "top": 0, "createdAt": 1758902069, "style": "", "script": "<script src='/gmeek/GmeekTOC.js'></script>", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-09-26", "dateLabelColor": "#0969da"}, "P2": {"htmlDir": "docs/post/IndexTTS.html", "labels": ["Model", "A2A"], "postTitle": "IndexTTS", "postUrl": "post/IndexTTS.html", "postSourceUrl": "https://github.com/realfaketop/web/issues/2", "commentNum": 0, "wordCount": 13075, "description": "## \u7248\u672c\u66f4\u65b0\n\n\n- **2025/09/08** IndexTTS-2 \u53d1\u5e03\uff08\u9996\u4e2a\u652f\u6301\u7cbe\u786e\u5408\u6210\u65f6\u957f\u63a7\u5236\u7684\u81ea\u56de\u5f52\u96f6\u6837\u672c\u6587\u672c\u8f6c\u8bed\u97f3\u6a21\u578b\uff09  \n- **2025/05/14** IndexTTS-1.5 \u53d1\u5e03\uff08\u63d0\u5347\u6a21\u578b\u7a33\u5b9a\u6027\u548c\u82f1\u6587\u8868\u73b0\uff09  \n- **2025/03/25** IndexTTS-1.0 \u53d1\u5e03\uff08\u5f00\u653e\u6743\u91cd\u548c\u63a8\u7406\u4ee3\u7801\uff09  \n- **2025/02/12** \u8bba\u6587\u63d0\u4ea4\u81f3 arXiv\uff0c\u5e76\u53d1\u5e03 Demo \u4e0e\u6d4b\u8bd5\u96c6  \n\n---\n\n<div style='text-align:left'>\n  <a href='https://arxiv.org/abs/2506.21619'>\n    <img src='https://img.shields.io/badge/ArXiv-2506.21619-red?logo=arxiv'/>\n  </a>\n  <br/>\n  <a href='https://github.com/index-tts/index-tts'>\n    <img src='https://img.shields.io/badge/GitHub-Code-orange?logo=github'/>\n  </a>\n  <a href='https://index-tts.github.io/index-tts2.github.io/'>\n    <img src='https://img.shields.io/badge/GitHub-Demo-orange?logo=github'/>\n  </a>\n  <br/>\n  <a href='https://huggingface.co/spaces/IndexTeam/IndexTTS-2-Demo'>\n    <img src='https://img.shields.io/badge/HuggingFace-Demo-blue?logo=huggingface'/>\n  </a>\n  <a href='https://huggingface.co/IndexTeam/IndexTTS-2'>\n    <img src='https://img.shields.io/badge/HuggingFace-Model-blue?logo=huggingface' />\n  </a>\n  <br/>\n  <a href='https://modelscope.cn/studios/IndexTeam/IndexTTS-2-Demo'>\n    <img src='https://img.shields.io/badge/ModelScope-Demo-purple?logo=modelscope'/>\n  </>\n  <a href='https://modelscope.cn/models/IndexTeam/IndexTTS-2'>\n    <img src='https://img.shields.io/badge/ModelScope-Model-purple?logo=modelscope'/>\n  </a>\n</div>\n\n---\n\n## \ud83e\udd16 \u6a21\u578b\u4e0b\u8f7d\n\n| **HuggingFace**                                          | **ModelScope** |\n|----------------------------------------------------------|----------------------------------------------------------|\n| [IndexTTS-2](https://huggingface.co/IndexTeam/IndexTTS-2) | [IndexTTS-2](https://modelscope.cn/models/IndexTeam/IndexTTS-2) |\n| [IndexTTS-1.5](https://huggingface.co/IndexTeam/IndexTTS-1.5) | [IndexTTS-1.5](https://modelscope.cn/models/IndexTeam/IndexTTS-1.5) |\n| [IndexTTS](https://huggingface.co/IndexTeam/Index-TTS) | [IndexTTS](https://modelscope.cn/models/IndexTeam/Index-TTS) |\n\n---\n\n## \ud83d\udcc4 \u8bba\u6587\n\n* **IndexTTS2**\n\n  > Zhou, Siyi; Zhou, Yiquan; He, Yi; Zhou, Xun; Wang, Jinchao; Deng, Wei; Shu, Jingchen\n  > *IndexTTS2: A Breakthrough in Emotionally Expressive and Duration-Controlled Auto-Regressive Zero-Shot Text-to-Speech*\n  > arXiv preprint arXiv:2506.21619 (2025)\n  > [[Paper Link](https://arxiv.org/abs/2506.21619)](https://arxiv.org/abs/2506.21619)\n\n* **IndexTTS1**\n\n  > Deng, Wei; Zhou, Siyi; Shu, Jingchen; Wang, Jinchao; Wang, Lu\n  > *IndexTTS: An Industrial-Level Controllable and Efficient Zero-Shot Text-To-Speech System*\n  > arXiv preprint arXiv:2502.05512 (2025)\n  > [[Paper Link](https://arxiv.org/abs/2502.05512)](https://arxiv.org/abs/2502.05512)\n\n\n\n## \u2699\ufe0f \u90e8\u7f72\u65b9\u6cd5\n\n#### 1. \u5b89\u88c5\u4f9d\u8d56\n\n```bash\n# \u5b89\u88c5 uv (\u63a8\u8350\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177)\npip install -U uv\n\n# \u514b\u9686\u9879\u76ee\ngit clone https://github.com/index-tts/index-tts.git && cd index-tts\ngit lfs install\ngit lfs pull\n\n# \u540c\u6b65\u4f9d\u8d56\nuv sync --all-extras\n# \u5982\u679c\u7f51\u7edc\u6162\uff0c\u53ef\u7528\u56fd\u5185\u955c\u50cf\uff1a\nuv sync --all-extras --default-index 'https://mirrors.aliyun.com/pypi/simple'\n```\n\n#### 2. \u4e0b\u8f7d\u6a21\u578b\n\n```bash\n# HuggingFace\nuv tool install 'huggingface-hub[cli,hf_xet]'\nhf download IndexTeam/IndexTTS-2 --local-dir=checkpoints\n\n# \u6216 ModelScope\nuv tool install 'modelscope'\nmodelscope download --model IndexTeam/IndexTTS-2 --local_dir checkpoints\n```\n\n#### 3. \u68c0\u67e5 GPU \u73af\u5883\n\n```bash\nuv run tools/gpu_check.py\n```\n\n#### 4. \u542f\u52a8 WebUI\n\n```bash\nuv run webui.py\n# \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:7860\n```\n\n#### 5. Python \u8c03\u7528\u793a\u4f8b\n\n```python\nfrom indextts.infer_v2 import IndexTTS2\n\ntts = IndexTTS2(cfg_path='checkpoints/config.yaml', model_dir='checkpoints', use_fp16=True)\ntext = 'Translate for me, what is a surprise!'\ntts.infer(spk_audio_prompt='examples/voice_01.wav', text=text, output_path='gen.wav', verbose=True)\n```\n\n\n## \ud83d\udce2 \u793e\u533a\u4e0e\u652f\u6301\n\n* QQ \u7fa4\uff1a553460296 (No.1) / 663272642 (No.4)\n* Discord\uff1a[[Join](https://discord.gg/uT32E7KDmy)](https://discord.gg/uT32E7KDmy)\n* Email\uff1a[[indexspeech@bilibili.com](mailto:indexspeech@bilibili.com)](mailto:indexspeech@bilibili.com)\n* \u5b98\u65b9\u4ed3\u5e93\uff1a[https://github.com/index-tts/index-tts](https://github.com/index-tts/index-tts)\n\n\n## \u8fd0\u884c\u4ee3\u7801\n\n```\n# .vscode/preview.yml\nautoOpen: true # \u6253\u5f00\u5de5\u4f5c\u7a7a\u95f4\u65f6\u662f\u5426\u81ea\u52a8\u5f00\u542f\u6240\u6709\u5e94\u7528\u7684\u9884\u89c8\napps:\n  - port: 7860 # \u5e94\u7528\u7684\u7aef\u53e3\n    run: uv run webui.py\n    root: ./index-tts # \u5e94\u7528\u7684\u542f\u52a8\u76ee\u5f55\n    name: IndexTTS2  # \u5e94\u7528\u540d\u79f0\n    description: IndexTTS2 # \u5e94\u7528\u63cf\u8ff0\n    autoOpen: true # \u6253\u5f00\u5de5\u4f5c\u7a7a\u95f4\u65f6\u662f\u5426\u81ea\u52a8\u8fd0\u884c\u547d\u4ee4\uff08\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6839\u7ea7 autoOpen\uff09\n    autoPreview: true # \u662f\u5426\u81ea\u52a8\u6253\u5f00\u9884\u89c8, \u82e5\u65e0\u5219\u9ed8\u8ba4\u4e3atrue\n```\n\n## \u6279\u91cf\u751f\u6210\n\n```\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n'''\nfeeday.py \u2014 IndexTTS2 \u6279\u91cf\u751f\u6210\uff08\u79bb\u7ebf/\u811a\u672c\u7248\uff09\n- \u81ea\u52a8\u5b89\u88c5\u4f9d\u8d56\uff08\u542b modelscope / transformers / accelerate / WeTextProcessing / descript-audiotools\uff09\n- \u8bfb\u53d6 in/1.txt\uff08\u6bcf\u884c\u4e00\u53e5\uff09\u548c in/ \u4e0b\u5168\u90e8\u53c2\u8003\u97f3\u9891\uff08wav/mp3/flac/m4a/ogg\uff09\n- \u505a\u201c\u97f3\u9891 \u00d7 \u6587\u672c\u201d\u7b1b\u5361\u5c14\u79ef\uff0c\u751f\u6210\u5230 out/\n\u9ed8\u8ba4\u8def\u5f84\uff1a\n  --in_dir    /workspace/index-tts/in\n  --out_dir   /workspace/index-tts/out\n  --model_dir /workspace/index-tts/checkpoints\n'''\nimport os, sys, time, subprocess, importlib\nfrom pathlib import Path\nimport argparse\n\n# -------------------- \u4f9d\u8d56\u81ea\u52a8\u5b89\u88c5\uff08\u542b\u7248\u672c\u5bf9\u9f50 & \u7279\u6b8a\u56de\u9000\uff09 --------------------\nPINNED_PKGS = {\n    # \u57fa\u7840\n    'numpy': 'numpy>=1.24',\n    'scipy': 'scipy>=1.10',\n    'soundfile': 'soundfile>=0.12',\n    'librosa': 'librosa>=0.10',\n    'einops': 'einops>=0.6',\n    'sentencepiece': 'sentencepiece>=0.1.99',\n    'safetensors': 'safetensors>=0.4.2',\n    'tqdm': 'tqdm>=4.66',\n    'packaging': 'packaging>=23.2',\n    'omegaconf': 'omegaconf>=2.3.0',\n    # \u5173\u952e\u4e09\u4ef6\u5957\n    'transformers': 'transformers>=4.44.2',\n    'accelerate': 'accelerate>=0.26.0',\n    'modelscope': 'modelscope>=1.19.0',\n    # DAC \u4f9d\u8d56\uff08\u5bfc\u5165\u540d audiotools\uff1b\u7279\u6b8a\u903b\u8f91\u89c1\u4e0b\uff09\n    'descript-audiotools': 'descript-audiotools',\n    # \u5e38\u89c1\u5c01\u88c5\u8f85\u52a9\uff08\u53ef\u9009\uff09\n    'av': 'av>=12.0.0',\n    'ffmpeg-python': 'ffmpeg-python>=0.2.0',\n    # \u4e2d\u6587\u6587\u672c\u6b63\u5219\u5316\uff08\u63d0\u4f9b tn.chinese.normalizer\uff09\n    'WeTextProcessing': 'WeTextProcessing',\n}\n\nIMPORT_NAME_MAP = {\n    'descript-audiotools': 'audiotools',\n    'ffmpeg-python': 'ffmpeg',\n    'WeTextProcessing': 'tn',   # \u5b89\u88c5\u5305\u540d WeTextProcessing\uff0c\u5bfc\u5165\u540d tn\n}\n\nALIYUN = 'https://mirrors.aliyun.com/pypi/simple/'\nPYPI = 'https://pypi.org/simple/'\n\ndef _import_name_of(spec_key: str) -> str:\n    return IMPORT_NAME_MAP.get(spec_key, spec_key.split('[')[0].split('==')[0].split('>=')[0])\n\ndef pip_install(args_list):\n    print('[PIP]', ' '.join(map(str, args_list)))\n    subprocess.check_call(args_list)\n\ndef install_general(spec_key: str, spec_value: str):\n    '''\u901a\u7528\u5b89\u88c5\uff1a\u9ed8\u8ba4\u7d22\u5f15 -> \u963f\u91cc\u955c\u50cf'''\n    mod = _import_name_of(spec_key)\n    try:\n        importlib.import_module(mod)\n        return\n    except Exception:\n        pass\n    try:\n        pip_install([sys.executable, '-m', 'pip', 'install', '-U', spec_value])\n        importlib.import_module(mod); return\n    except Exception as e1:\n        print(f'[WARN] install {spec_value} on default index failed: {e1}')\n    try:\n        pip_install([sys.executable, '-m', 'pip', 'install', '-U', spec_value, '-i', ALIYUN])\n        importlib.import_module(mod); return\n    except Exception as e2:\n        print(f'[WARN] install {spec_value} on Aliyun failed: {e2}')\n        raise\n\ndef install_descript_audiotools():\n    '''descript-audiotools \u7279\u6b8a\u5904\u7406\uff1a\n       1) PyPI \u6700\u65b0\uff1b2) PyPI 0.7.2\uff1b3) \u963f\u91cc 0.7.2\n    '''\n    mod = 'audiotools'\n    try:\n        importlib.import_module(mod); return\n    except Exception:\n        pass\n    for spec, idx in [\n        ('descript-audiotools', PYPI),\n        ('descript-audiotools==0.7.2', PYPI),\n        ('descript-audiotools==0.7.2', ALIYUN),\n    ]:\n        try:\n            pip_install([sys.executable, '-m', 'pip', 'install', '-U', spec, '-i', idx])\n            importlib.import_module(mod); return\n        except Exception as e:\n            print(f'[WARN] {spec} via {idx} failed: {e}')\n    raise RuntimeError('Failed to install descript-audiotools')\n\ndef install_wetextprocessing():\n    '''WeTextProcessing \u63d0\u4f9b tn.*\uff1a\n       1) PyPI \u6700\u65b0\uff1b2) \u963f\u91cc\u6700\u65b0\uff1b\u5931\u8d25\u5219\u62a5\u9519\n    '''\n    try:\n        importlib.import_module('tn'); return\n    except Exception:\n        pass\n    for idx in [PYPI, ALIYUN]:\n        try:\n            pip_install([sys.executable, '-m', 'pip', 'install', '-U', 'WeTextProcessing', '-i', idx])\n            importlib.import_module('tn'); return\n        except Exception as e:\n            print(f'[WARN] WeTextProcessing via {idx} failed: {e}')\n    raise RuntimeError('Failed to install WeTextProcessing (tn)')\n\ndef ensure_deps():\n    for k, v in PINNED_PKGS.items():\n        if k == 'descript-audiotools':\n            install_descript_audiotools()\n        elif k == 'WeTextProcessing':\n            install_wetextprocessing()\n        else:\n            install_general(k, v)\n    # \u5173\u952e\uff1a\u7acb\u523b\u9a8c\u8bc1 accelerate\n    try:\n        import accelerate  # noqa: F401\n    except Exception as e:\n        print('[FATAL] accelerate \u4ecd\u4e0d\u53ef\u7528\uff1a', e)\n        print('\u8bf7\u9000\u51fa\u5f53\u524d\u8fdb\u7a0b\u540e\u91cd\u8dd1\u672c\u811a\u672c\uff1b\u6216\u624b\u52a8\u6267\u884c\uff1a')\n        print('  python -m pip install -U 'transformers>=4.44.2' 'accelerate>=0.26.0' 'modelscope>=1.19.0'')\n        sys.exit(1)\n\nensure_deps()\n\n# -------------------- \u4e1a\u52a1\u903b\u8f91 --------------------\nSCRIPT_DIR = Path(__file__).resolve().parent\nsys.path.append(str(SCRIPT_DIR))\nsys.path.append(str(SCRIPT_DIR / 'indextts'))\n\nfrom indextts.infer_v2 import IndexTTS2  # noqa: E402\n\ndef find_prompt_audios(in_dir: Path):\n    exts = ['*.wav', '*.mp3', '*.flac', '*.m4a', '*.ogg']\n    files = []\n    for p in exts: files += list(in_dir.glob(p))\n    return sorted([p for p in files if p.is_file()], key=lambda x: x.name.lower())\n\ndef read_lines(txt: Path):\n    with txt.open('r', encoding='utf-8') as f:\n        return [ln.strip() for ln in f if ln.strip()]\n\ndef safe_stem(p: Path) -> str:\n    return p.stem.replace(' ', '_').replace('/', '_').replace('\\\\', '_')[:80]\n\ndef detect_fp16() -> bool:\n    try:\n        import torch\n        return torch.cuda.is_available()\n    except Exception:\n        return False\n\ndef main():\n    parser = argparse.ArgumentParser(description='IndexTTS2 \u6279\u91cf\u751f\u6210\uff08\u97f3\u9891 \u00d7 \u6587\u672c\uff09')\n    parser.add_argument('--in_dir', type=str, default='/workspace/index-tts/in', help='\u8f93\u5165\u76ee\u5f55\uff08\u542b 1.txt \u4e0e\u53c2\u8003\u97f3\u9891\uff09')\n    parser.add_argument('--out_dir', type=str, default='/workspace/index-tts/out', help='\u8f93\u51fa\u76ee\u5f55')\n    parser.add_argument('--model_dir', type=str, default='/workspace/index-tts/checkpoints', help='\u6a21\u578b\u76ee\u5f55\uff08\u542b config.yaml \u7b49\uff09')\n    # \u751f\u6210\u53c2\u6570\n    parser.add_argument('--max_text_tokens_per_segment', type=int, default=120)\n    parser.add_argument('--do_sample', action='store_true', default=True)\n    parser.add_argument('--top_p', type=float, default=0.8)\n    parser.add_argument('--top_k', type=int, default=30)\n    parser.add_argument('--temperature', type=float, default=0.8)\n    parser.add_argument('--num_beams', type=int, default=3)\n    parser.add_argument('--repetition_penalty', type=float, default=10.0)\n    parser.add_argument('--max_mel_tokens', type=int, default=1500)\n    args = parser.parse_args()\n\n    in_dir = Path(args.in_dir).resolve()\n    out_dir = Path(args.out_dir).resolve()\n    model_dir = Path(args.model_dir).resolve()\n\n    if not in_dir.exists():\n        print(f'[ERROR] \u8f93\u5165\u76ee\u5f55\u4e0d\u5b58\u5728\uff1a{in_dir}'); sys.exit(1)\n    txt = in_dir / '1.txt'\n    if not txt.exists():\n        print(f'[ERROR] \u7f3a\u5c11\u6587\u672c\u6587\u4ef6\uff1a{txt}'); sys.exit(1)\n    if not model_dir.exists():\n        print(f'[ERROR] \u6a21\u578b\u76ee\u5f55\u4e0d\u5b58\u5728\uff1a{model_dir}'); sys.exit(1)\n\n    prompts = find_prompt_audios(in_dir)\n    texts = read_lines(txt)\n    if not prompts:\n        print(f'[ERROR] {in_dir} \u4e0b\u672a\u627e\u5230\u97f3\u9891\uff08\u652f\u6301 wav/mp3/flac/m4a/ogg\uff09'); sys.exit(1)\n    if not texts:\n        print(f'[ERROR] {txt} \u4e3a\u7a7a'); sys.exit(1)\n\n    out_dir.mkdir(parents=True, exist_ok=True)\n\n    use_fp16 = detect_fp16()\n    print(f'[INFO] Loading IndexTTS2 ... (fp16={use_fp16})')\n    tts = IndexTTS2(\n        cfg_path=str(model_dir / 'config.yaml'),\n        model_dir=str(model_dir),\n        use_fp16=use_fp16,\n        use_cuda_kernel=False,\n        use_deepspeed=False,\n    )\n    print(f'[INFO] Model loaded. version={tts.model_version or '1.0'}')\n\n    total = len(prompts) * len(texts)\n    idx = 0\n    for pa in prompts:\n        base = safe_stem(pa)\n        for li, text in enumerate(texts, 1):\n            idx += 1\n            ts = int(time.time() * 1000)\n            out_path = out_dir / f'{base}__L{li:03d}__{ts}.wav'\n            print(f'[{idx}/{total}] {pa.name} \u00d7 L{li} -> {out_path.name}')\n            try:\n                tts.infer(\n                    spk_audio_prompt=str(pa),\n                    text=text,\n                    output_path=str(out_path),\n                    emo_audio_prompt=None,\n                    emo_alpha=0.65,\n                    emo_vector=None,\n                    use_emo_text=False,\n                    emo_text=None,\n                    use_random=False,\n                    verbose=False,\n                    max_text_tokens_per_segment=int(args.max_text_tokens_per_segment),\n                    do_sample=bool(args.do_sample),\n                    top_p=float(args.top_p),\n                    top_k=int(args.top_k) if int(args.top_k) > 0 else None,\n                    temperature=float(args.temperature),\n                    length_penalty=0.0,\n                    num_beams=int(args.num_beams),\n                    repetition_penalty=float(args.repetition_penalty),\n                    max_mel_tokens=int(args.max_mel_tokens),\n                )\n            except Exception as e:\n                print(f'[ERROR] \u751f\u6210\u5931\u8d25\uff1a{e}')\n\n    print(f'[DONE] \u5171\u751f\u6210 {total} \u6761\u97f3\u9891\uff0c\u8f93\u51fa\u76ee\u5f55\uff1a{out_dir}')\n\nif __name__ == '__main__':\n    main()\n```\u3002", "top": 0, "createdAt": 1759066892, "style": "", "script": "<script src='/gmeek/GmeekTOC.js'></script>", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-09-28", "dateLabelColor": "#0969da"}}, "singeListJson": {}, "labelColorDict": {"A2A": "#aaaaaa", "bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "Model": "#aaaaaa", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "RealFake", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "prevUrl": "disabled", "nextUrl": "disabled"}